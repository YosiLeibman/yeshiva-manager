{"version":3,"sources":["components/layouts/SingedInLinks.js","store/actions/authActions.js","components/layouts/SingedOutLinks.js","components/layouts/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","components/app/App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","SingedInLinks","SingedOutLinks","Link","Notifications","notifications","map","ntfc","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","uthorLastName","CreateProject","handlleChange","e","_this","setState","Object","defineProperty","target","value","handlleSubmit","preventDefault","createProject","history","push","onSubmit","htmlFor","onChange","dispacth","getFirestore","authorId","add","objectSpread","firstName","lastName","Date","catch","err","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","_ref3","createUserWithEmailAndPassword","respons","doc","set","App","BrowserRouter","layouts_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReduser","rootReducer","combineReducers","projectReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","components_app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df26f034.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/create\">New Project</NavLink>\r\n        </li>\r\n        <li>\r\n          <a onClick={props.signOut}>Log Out</a>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {props.profile.initials}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(respons => {\r\n        console.log(respons);\r\n        firestore\r\n          .collection(\"users\")\r\n          .doc(respons.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n        <li><NavLink to='/signin'>Sing In</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SingedInLinks from \"./SingedInLinks\";\r\nimport SingedOutLinks from \"./SingedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SingedInLinks profile={profile} />\r\n  ) : (\r\n    <SingedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Project Manager\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depht-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">notofications</span>\r\n          <ul className=\"notofocations\">\r\n            {notifications &&\r\n              notifications.map(ntfc => {\r\n                return (\r\n                  <li key={ntfc.id}>\r\n                    <span className=\"pink-text\">{ntfc.user} </span>\r\n                    <span>{ntfc.content} </span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(ntfc.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 porject-summary\">\r\n      <div className=\"card-content gray-text text-dark3n-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"gary-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return(\r\n                        <Link to={'/project/' + project.id}  key={project.id}>\r\n                            <ProjectSummary project={project} />\r\n                        </Link>\r\n                )})\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 4, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = props => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action gray lighten-4 gray-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.uthorLastName}\r\n            </div>\r\n            {moment(project.createdAt.toDate()).calendar()}\r\n            <div>3rd sep 4 am</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <p className=\"center\">loading project...</p>;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n  handlleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handlleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state)\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handlleSubmit} className=\"white\">\r\n          <h5 className=\"gray-text text-daren-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handlleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handlleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighetn-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispacth, getState, { getFirebase, getFirestore }) => {\r\n    // some async code\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispacth({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        dispacth({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handlleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handlleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handlleSubmit} className=\"white\">\r\n          <h5 className=\"gray-text text-daren-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handlleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.handlleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighetn-1 z-depth-0\">Log In</button>\r\n          </div>\r\n          <div className=\"center red-text\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n  handlleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handlleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handlleSubmit} className=\"white\">\r\n          <h5 className=\"gray-text text-daren-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handlleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.handlleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handlleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handlleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighetn-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n          <div className=\"center red-text\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport Navbar from '../layouts/Navbar'\nimport Dashboard from '../dashboard/Dashboard'\nimport ProjectDetails from '../projects/ProjectDetails'\nimport CreateProject from '../projects/CreateProject'\nimport SignIn from '../auth/SignIn'\nimport SignUp from '../auth/SignUp'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        authError: null\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      console.log(action.err.message);\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n      ]\r\n}\r\n\r\nconst projectReduser = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('project creared', action.project)\r\n            return state\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state\r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\n\r\nexport default projectReduser","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyCM5A7glOuiTwLFhGFmt62Y7h22wo8KqPg\",\r\n    authDomain: \"react-redux-project-manager.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-project-manager.firebaseio.com\",\r\n    projectId: \"react-redux-project-manager\",\r\n    storageBucket: \"react-redux-project-manager.appspot.com\",\r\n    messagingSenderId: \"940120263725\"\r\n  }\r\n\r\n  firebase.initializeApp(config)\r\n\r\n  firebase.firestore().settings({timestampsInSnapshots: true})\r\n\r\n  export default firebase\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}